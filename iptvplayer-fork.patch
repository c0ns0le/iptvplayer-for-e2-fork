diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/configbase.py ./IPTVPlayer/components/configbase.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/configbase.py	2015-11-16 06:19:04.566308000 +0100
+++ ./IPTVPlayer/components/configbase.py	2015-12-14 22:44:39.241898998 +0100
@@ -8,10 +8,9 @@
 ###################################################
 # LOCAL import
 ###################################################
-from Plugins.Extensions.IPTVPlayer.tools.iptvtools import printDBG, printExc
-from Plugins.Extensions.IPTVPlayer.components.iptvdirbrowser import IPTVDirectorySelectorWidget
+from Plugins.Extensions.IPTVPlayer.tools.iptvtools import printDBG, printExc, IsExecutable, GetBinDir
 ###################################################
-
+from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import *
 ###################################################
 # FOREIGN import
 ###################################################
@@ -33,7 +32,7 @@
     screenwidth = getDesktop(0).size().width()
     if screenwidth and screenwidth == 1920:
         skin = """
-            <screen name="IPTVConfigBaseWidget" position="center,center" size="920,860" title="" >
+            <screen name="ConfigMenu" position="center,center" size="920,860" title="" >
                 <widget name="config"    position="10,70" size="900,780" zPosition="1" transparent="1" scrollbarMode="showOnDemand" />
                 <widget name="key_red"   position="10,10" zPosition="2" size="600,35" valign="center" halign="left"   font="Regular;28" transparent="1" foregroundColor="red" />
                 <widget name="key_ok"    position="10,10" zPosition="2" size="600,35" valign="center" halign="center" font="Regular;28" transparent="1" foregroundColor="white" />
@@ -43,7 +42,7 @@
             </screen>"""
     else:
         skin = """
-            <screen name="IPTVConfigBaseWidget" position="center,center" size="620,440" title="" >
+            <screen name="ConfigMenu" position="center,center" size="620,440" title="" >
                 <widget name="config"    position="10,50" size="600,370" zPosition="1" transparent="1" scrollbarMode="showOnDemand" />
                 <widget name="key_red"   position="10,10" zPosition="2" size="600,35" valign="center" halign="left"   font="Regular;22" transparent="1" foregroundColor="red" />
                 <widget name="key_ok"    position="10,10" zPosition="2" size="600,35" valign="center" halign="center" font="Regular;22" transparent="1" foregroundColor="white" />
@@ -220,6 +219,12 @@
         if isinstance(currItem, ConfigDirectory):
             def SetDirPathCallBack(curIndex, newPath):
                 if None != newPath: self["config"].list[curIndex][1].value = newPath
+            if IsExecutable(GetBinDir('lsdir')):
+                printDBG('lsdir found, starting iptv browser') 
+                from Plugins.Extensions.IPTVPlayer.components.iptvdirbrowser import IPTVDirectorySelectorWidget
+            else:
+                printDBG('No lsdir utility, starting generic browser') 
+                from Plugins.Extensions.IPTVPlayer.components.filebrowserwidget.py import DirectorySelectorWidget as IPTVDirectorySelectorWidget
             self.session.openWithCallback(boundFunction(SetDirPathCallBack, curIndex), IPTVDirectorySelectorWidget, currDir=currItem.value,  title=_('Select the directory'))
             return
         elif isinstance(currItem, ConfigText):
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvconfigmenu.py ./IPTVPlayer/components/iptvconfigmenu.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvconfigmenu.py	2015-11-30 16:23:05.251030000 +0100
+++ ./IPTVPlayer/components/iptvconfigmenu.py	2015-12-14 16:01:53.894047000 +0100
@@ -7,12 +7,11 @@
 ###################################################
 # LOCAL import
 ###################################################
-from Plugins.Extensions.IPTVPlayer.tools.iptvtools import printDBG, printExc, GetSkinsList, GetHostsList, IsHostEnabled, IsExecutable, CFakeMoviePlayerOption, GetAvailableIconSize
+from Plugins.Extensions.IPTVPlayer.tools.iptvtools import printDBG, printExc, GetSkinsList, GetHostsList, IsHostEnabled, IsExecutable, GetBinDir, CFakeMoviePlayerOption, GetAvailableIconSize
 from Plugins.Extensions.IPTVPlayer.iptvupdate.updatemainwindow import IPTVUpdateWindow, UpdateMainAppImpl
 from Plugins.Extensions.IPTVPlayer.components.iptvplayerinit import TranslateTXT as _, IPTVPlayerNeedInit
 from Plugins.Extensions.IPTVPlayer.components.configbase import ConfigBaseWidget
 from Plugins.Extensions.IPTVPlayer.components.confighost import ConfigHostsMenu
-from Plugins.Extensions.IPTVPlayer.components.iptvdirbrowser import IPTVDirectorySelectorWidget
 from Plugins.Extensions.IPTVPlayer.setup.iptvsetupwidget import IPTVSetupMainWidget
 ###################################################
 
@@ -46,7 +45,7 @@
 config.plugins.iptvplayer.uchardetpath    = ConfigText(default = "", fixed_size = False)
 config.plugins.iptvplayer.set_curr_title  = ConfigYesNo(default = False)
 config.plugins.iptvplayer.curr_title_file = ConfigText(default = "", fixed_size = False) 
-config.plugins.iptvplayer.plarform        = ConfigSelection(default = "auto", choices = [("auto", "auto"),("mipsel", _("mipsel")),("sh4", _("sh4")),("i686", _("i686")), ("armv7", _("armv7")), ("unknown", _("unknown"))])
+config.plugins.iptvplayer.plarform        = ConfigSelection(default = "auto", choices = [("auto", "auto"),("mipsel", _("mipsel")),("sh4", _("sh4")),("i686", _("i686")),("arm", _("arm")),("unknown", _("unsupported"))])
 
 config.plugins.iptvplayer.showcover          = ConfigYesNo(default = True)
 config.plugins.iptvplayer.deleteIcons        = ConfigSelection(default = "3", choices = [("0", _("after closing")),("1", _("after day")),("3", _("after three days")),("7", _("after a week"))]) 
@@ -72,13 +71,13 @@
 
 
 def GetMoviePlayerName(player):
-    map = {"auto":_("auto"), "mini": _("internal"), "standard":_("standard"), 'exteplayer': _("external eplayer3"), 'extgstplayer': _("external gstplayer")}
+    map = {"auto":_("auto"), "mini": _("internal"), "standard":_("standard"), "afp":_("Advanced Free Player"), 'exteplayer': _("external eplayer3"), 'extgstplayer': _("external gstplayer")}
     return map.get(player, _('unknown'))
     
 def ConfigPlayer(player):
     return (player, GetMoviePlayerName(player))
 
-config.plugins.iptvplayer.NaszPlayer = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"), ConfigPlayer("mini"), ConfigPlayer('extgstplayer'), ConfigPlayer("standard")])
+config.plugins.iptvplayer.NaszPlayer = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"), ConfigPlayer("mini"), ConfigPlayer("afp"), ConfigPlayer('extgstplayer'), ConfigPlayer("standard")])
 
 # without buffering mode
 #sh4
@@ -92,11 +91,12 @@
 #i686
 config.plugins.iptvplayer.defaultI686MoviePlayer0        = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
 config.plugins.iptvplayer.alternativeI686MoviePlayer0    = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
+
+#arm
+config.plugins.iptvplayer.defaultARMMoviePlayer0        = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
+config.plugins.iptvplayer.alternativeARMMoviePlayer0    = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
 # end without buffering mode players
 
-#armv7
-config.plugins.iptvplayer.defaultARMV7MoviePlayer0      = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer'),ConfigPlayer('exteplayer')])
-config.plugins.iptvplayer.alternativeARMV7MoviePlayer0  = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer'),ConfigPlayer('exteplayer')])
 
 # with buffering mode
 #sh4
@@ -111,9 +111,9 @@
 config.plugins.iptvplayer.defaultI686MoviePlayer        = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
 config.plugins.iptvplayer.alternativeI686MoviePlayer    = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
 
-#armv7
-config.plugins.iptvplayer.defaultARMV7MoviePlayer      = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer'),ConfigPlayer('exteplayer')])
-config.plugins.iptvplayer.alternativeARMV7MoviePlayer  = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer'),ConfigPlayer('exteplayer')])
+#i686
+config.plugins.iptvplayer.defaultARMMoviePlayer        = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
+config.plugins.iptvplayer.alternativeARMMoviePlayer    = ConfigSelection(default = "auto", choices = [ConfigPlayer("auto"),ConfigPlayer("mini"),ConfigPlayer("standard"),ConfigPlayer('extgstplayer')])
 # end with buffering mode players
 
 config.plugins.iptvplayer.SciezkaCache = ConfigDirectory(default = "/hdd/IPTVCache/") #, fixed_size = False)
@@ -171,7 +171,9 @@
 config.plugins.iptvplayer.search_history_size  = ConfigInteger(50, (0, 1000000))
 
 ###################################################
-
+j00zekFork=True
+from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import AlternateOptionsList, ExtendConfigsList, RemoveDuplicatesFromList
+ExtendConfigsList()
 ########################################################
 # Generate list of hosts options for Enabling/Disabling
 ########################################################
@@ -214,6 +216,8 @@
         
     @staticmethod
     def fillConfigList(list, hiddenOptions=False):
+        if 'j00zekFork' in globals():
+            AlternateOptionsList(list)
         if hiddenOptions:
             list.append( getConfigListEntry(_("Last checked version"), config.plugins.iptvplayer.updateLastCheckedVersion) )
             list.append( getConfigListEntry(_("Show all version in the update menu"), config.plugins.iptvplayer.hiddenAllVersionInUpdate) )
@@ -314,17 +318,17 @@
             players.append(config.plugins.iptvplayer.defaultI686MoviePlayer)
             list.append(getConfigListEntry(_("Second move player in buffering mode"), config.plugins.iptvplayer.alternativeI686MoviePlayer))
             players.append(config.plugins.iptvplayer.alternativeI686MoviePlayer)
-
-        elif 'armv7' == config.plugins.iptvplayer.plarform.value:
-            list.append(getConfigListEntry(_("First move player without buffering mode"), config.plugins.iptvplayer.defaultARMV7MoviePlayer0))
-            players.append(config.plugins.iptvplayer.defaultARMV7MoviePlayer0)
-            list.append(getConfigListEntry(_("Second move player without buffering mode"), config.plugins.iptvplayer.alternativeARMV7MoviePlayer0))
-            players.append(config.plugins.iptvplayer.alternativeARMV7MoviePlayer0)
-            
-            list.append(getConfigListEntry(_("First move player in buffering mode"), config.plugins.iptvplayer.defaultARMV7MoviePlayer))
-            players.append(config.plugins.iptvplayer.defaultARMV7MoviePlayer)
-            list.append(getConfigListEntry(_("Second move player in buffering mode"), config.plugins.iptvplayer.alternativeARMV7MoviePlayer))
-            players.append(config.plugins.iptvplayer.alternativeARMV7MoviePlayer)
+            
+        elif 'arm' == config.plugins.iptvplayer.plarform.value:
+            list.append(getConfigListEntry(_("First move player without buffering mode"), config.plugins.iptvplayer.defaultARMMoviePlayer0))
+            players.append(config.plugins.iptvplayer.defaultARMMoviePlayer0)
+            list.append(getConfigListEntry(_("Second move player without buffering mode"), config.plugins.iptvplayer.alternativeARMMoviePlayer0))
+            players.append(config.plugins.iptvplayer.alternativeARMMoviePlayer0)
+            
+            list.append(getConfigListEntry(_("First move player in buffering mode"), config.plugins.iptvplayer.defaultARMMoviePlayer))
+            players.append(config.plugins.iptvplayer.defaultARMMoviePlayer)
+            list.append(getConfigListEntry(_("Second move player in buffering mode"), config.plugins.iptvplayer.alternativeARMMoviePlayer))
+            players.append(config.plugins.iptvplayer.alternativeARMMoviePlayer)
             
         else: 
             list.append(getConfigListEntry(_("Movie player"), config.plugins.iptvplayer.NaszPlayer))
@@ -341,6 +345,8 @@
         list.append(getConfigListEntry(_("Debug logs"), config.plugins.iptvplayer.debugprint))
         list.append(getConfigListEntry(_("Allow downgrade"), config.plugins.iptvplayer.downgradePossible))
         list.append(getConfigListEntry(_("Update packet type"), config.plugins.iptvplayer.possibleUpdateType))
+        if 'j00zekFork' in globals():
+            RemoveDuplicatesFromList(list)
 
     def runSetup(self):
         self.list = []
@@ -364,8 +370,12 @@
             self.doUpdate()
 
     def doUpdate(self):
-        printDBG("ConfigMenu.doUpdate")
-        self.session.open(IPTVUpdateWindow, UpdateMainAppImpl(self.session))
+        if 'j00zekFork' in globals():
+            from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import j00zekIPTVPlayerConsole, j00zekRunUpdateList
+            self.session.open(j00zekIPTVPlayerConsole, title = _("Updating plugin"), cmdlist = j00zekRunUpdateList)
+        else:
+            printDBG("ConfigMenu.doUpdate")
+            self.session.open(IPTVUpdateWindow, UpdateMainAppImpl(self.session))
         
 
     def save(self):
@@ -389,7 +399,12 @@
         if isinstance(currItem, ConfigDirectory):
             def SetDirPathCallBack(curIndex, newPath):
                 if None != newPath: self["config"].list[curIndex][1].value = newPath
-            self.session.openWithCallback(boundFunction(SetDirPathCallBack, curIndex), IPTVDirectorySelectorWidget, currDir=currItem.value, title="Wybierz katalog")
+            if IsExecutable(GetBinDir('lsdir')):
+                from Plugins.Extensions.IPTVPlayer.components.iptvdirbrowser import IPTVDirectorySelectorWidget
+                self.session.openWithCallback(boundFunction(SetDirPathCallBack, curIndex), IPTVDirectorySelectorWidget, currDir=currItem.value, title="Wybierz katalog")
+            else:
+                from Plugins.Extensions.IPTVPlayer.components.filebrowserwidget import DirectorySelectorWidget
+                self.session.openWithCallback(boundFunction(SetDirPathCallBack, curIndex), DirectorySelectorWidget, currDir=currItem.value, title="Wybierz katalog")
         elif config.plugins.iptvplayer.fakePin == currItem:
             self.changePin(start = True)
         elif config.plugins.iptvplayer.fakeUpdate == currItem:
@@ -422,16 +437,16 @@
             players.append(config.plugins.iptvplayer.alternativeMIPSELMoviePlayer0)
             players.append(config.plugins.iptvplayer.defaultMIPSELMoviePlayer)
             players.append(config.plugins.iptvplayer.alternativeMIPSELMoviePlayer)
-        elif 'armv7' == config.plugins.iptvplayer.plarform.value:
-            players.append(config.plugins.iptvplayer.defaultARMV7MoviePlayer0)
-            players.append(config.plugins.iptvplayer.alternativeARMV7MoviePlayer0)
-            players.append(config.plugins.iptvplayer.defaultARMV7MoviePlayer)
-            players.append(config.plugins.iptvplayer.alternativeARMV7MoviePlayer)
         elif 'i686' == config.plugins.iptvplayer.plarform.value:
             players.append(config.plugins.iptvplayer.defaultI686MoviePlayer0)
             players.append(config.plugins.iptvplayer.alternativeI686MoviePlayer0)
             players.append(config.plugins.iptvplayer.defaultI686MoviePlayer)
             players.append(config.plugins.iptvplayer.alternativeI686MoviePlayer)
+        elif 'arm' == config.plugins.iptvplayer.plarform.value:
+            players.append(config.plugins.iptvplayer.defaultARMMoviePlayer0)
+            players.append(config.plugins.iptvplayer.alternativeARMMoviePlayer0)
+            players.append(config.plugins.iptvplayer.defaultARMMoviePlayer)
+            players.append(config.plugins.iptvplayer.alternativeARMMoviePlayer)
         else:
             players.append(config.plugins.iptvplayer.NaszPlayer)
         tab.extend(players)
@@ -503,14 +518,6 @@
             player = config.plugins.iptvplayer.defaultMIPSELMoviePlayer0
             alternativePlayer = config.plugins.iptvplayer.alternativeMIPSELMoviePlayer0
 
-    elif 'armv7' == config.plugins.iptvplayer.plarform.value:
-        if buffering:
-            player = config.plugins.iptvplayer.defaultARMV7MoviePlayer
-            alternativePlayer = config.plugins.iptvplayer.alternativeARMV7MoviePlayer
-        else:
-            player = config.plugins.iptvplayer.defaultARMV7MoviePlayer0
-            alternativePlayer = config.plugins.iptvplayer.alternativeARMV7MoviePlayer0
-
     elif 'i686' == config.plugins.iptvplayer.plarform.value:
         if buffering:
             player = config.plugins.iptvplayer.defaultI686MoviePlayer
@@ -518,6 +525,14 @@
         else:
             player = config.plugins.iptvplayer.defaultI686MoviePlayer0
             alternativePlayer = config.plugins.iptvplayer.alternativeI686MoviePlayer0
+            
+    elif 'arm' == config.plugins.iptvplayer.plarform.value:
+        if buffering:
+            player = config.plugins.iptvplayer.defaultARMMoviePlayer
+            alternativePlayer = config.plugins.iptvplayer.alternativeARMMoviePlayer
+        else:
+            player = config.plugins.iptvplayer.defaultARMMoviePlayer0
+            alternativePlayer = config.plugins.iptvplayer.alternativeARMMoviePlayer0
     else:
         player = config.plugins.iptvplayer.NaszPlayer
         alternativePlayer = config.plugins.iptvplayer.NaszPlayer
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvextmovieplayer.py ./IPTVPlayer/components/iptvextmovieplayer.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvextmovieplayer.py	2015-12-01 20:55:07.046977999 +0100
+++ ./IPTVPlayer/components/iptvextmovieplayer.py	2015-12-14 16:01:53.898044999 +0100
@@ -1369,7 +1369,7 @@
                 
             if config.plugins.iptvplayer.aac_software_decode.value:
                 cmd += ' -a -p 10'
-            elif config.plugins.iptvplayer.plarform.value in ('mipsel', 'armv7'):
+            elif config.plugins.iptvplayer.plarform.value in ('mipsel', 'armv7', 'arm'):
                 cmd += ' -p 2'
             audioTrackIdx = self.metaHandler.getAudioTrackIdx()
             printDBG(">>>>>>>>>>>>>>>>>>>>>>>> audioTrackIdx[%d]" % audioTrackIdx)
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvplayerwidget.py ./IPTVPlayer/components/iptvplayerwidget.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/components/iptvplayerwidget.py	2015-12-13 07:38:57.667009000 +0100
+++ ./IPTVPlayer/components/iptvplayerwidget.py	2015-12-14 22:44:11.789898998 +0100
@@ -11,6 +11,10 @@
 from urllib import quote as urllib_quote
 
 ####################################################
+#                  j00zek E2
+####################################################
+j00zekFork=True
+####################################################
 #                   E2 components
 ####################################################
 from Screens.Screen import Screen
@@ -319,7 +323,7 @@
         try:
             asynccall.gMainFunctionsQueue.setProcFun(None)
             asynccall.gMainFunctionsQueue.clearQueue()
-            iptv_system('echo 1 > /proc/sys/vm/drop_caches')
+            ClearMemory()
         except:
             printExc()
         self.activePlayer = None
@@ -898,10 +902,14 @@
         self.askUpdateAvailable(self.selectHost)
     
     def __requestCheckUpdate(self):
-        lastVerUrl = 'http://iptvplayer.pl/download/update/lastversion.php'
         if config.plugins.iptvplayer.autoCheckForUpdate.value:
             self.checkUpdateTimer.start(self.checkUpdateTimer_interval, True)
             if IsExecutable( DMHelper.GET_WGET_PATH() ):
+                if 'j00zekFork' in globals():
+                    lastVerUrl = 'https://raw.githubusercontent.com/j00zek/iptvplayer-for-e2-fork/master/jVersion.txt'
+                    #cmd = '%s -q "%s" -O -|grep IPTV_VERSION|grep -o "[0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]" 2> /dev/null ' % (DMHelper.GET_WGET_PATH(), lastVerUrl)
+                else:
+                    lastVerUrl = 'http://iptvplayer.pl/download/update/lastversion.php'
                 cmd = '%s "%s" -O - 2> /dev/null ' % (DMHelper.GET_WGET_PATH(), lastVerUrl)
                 if None != self.checkUpdateConsole: self.checkUpdateConsole.terminate()
                 printDBG("__requestCheckUpdate cmd[%r]" % cmd)
@@ -915,7 +923,7 @@
     def askUpdateAvailable(self, NoUpdateCallback):
         if  config.plugins.iptvplayer.autoCheckForUpdate.value \
             and  0 < GetVersionNum( self.lastPluginVersion ) \
-            and GetVersionNum( self.lastPluginVersion ) > GetVersionNum( GetIPTVPlayerVerstion() ) \
+            and GetVersionNum( self.lastPluginVersion ) > GetVersionNum( GetIPTVPlayerVerstion().replace('j','') ) \
             and self.lastPluginVersion != config.plugins.iptvplayer.updateLastCheckedVersion.value:
             
             message = _('There is a new version available do you want to update? \nYour version [%s], latest version on server [%s]') % (GetIPTVPlayerVerstion(), self.lastPluginVersion)
@@ -989,7 +997,10 @@
         return
 
     def displayListOfHosts(self, arg = None):
-        if config.plugins.iptvplayer.ListaGraficzna.value == False or 0 == GetAvailableIconSize():
+        if 'j00zekFork' in globals() and config.plugins.iptvplayer.j00zekTreeHostsSelector.value == True:
+            from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekHostTreeSelector import j00zekHostTreeSelector
+            self.session.openWithCallback(self.selectHostCallback, j00zekHostTreeSelector, list = self.displayHostsList)
+        elif config.plugins.iptvplayer.ListaGraficzna.value == False or 0 == GetAvailableIconSize():
             self.session.openWithCallback(self.selectHostCallback, ChoiceBox, title=_("Select service"), list = self.displayHostsList)
         else:
             from playerselector import PlayerSelectorWidget
@@ -1027,7 +1038,11 @@
                 self.close()
                 return
             elif ret[1] == "update":
-                self.session.openWithCallback(self.displayListOfHosts, IPTVUpdateWindow, UpdateMainAppImpl(self.session))
+                if 'j00zekFork' in globals():
+                    from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import j00zekIPTVPlayerConsole, j00zekRunUpdateList
+                    self.session.openWithCallback(self.displayListOfHosts, j00zekIPTVPlayerConsole, title = _("Updating plugin"), cmdlist = j00zekRunUpdateList)
+                else:
+                    self.session.openWithCallback(self.displayListOfHosts, IPTVUpdateWindow, UpdateMainAppImpl(self.session))
                 return
             elif ret[1] == "IPTVDM":
                 self.runIPTVDM(self.selectHost)
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/iptvupdate/updatemainwindow.py ./IPTVPlayer/iptvupdate/updatemainwindow.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/iptvupdate/updatemainwindow.py	2015-11-11 07:16:45.118414000 +0100
+++ ./IPTVPlayer/iptvupdate/updatemainwindow.py	2015-12-14 16:01:53.902042998 +0100
@@ -19,7 +19,7 @@
 from Plugins.Extensions.IPTVPlayer.libs.pCommon             import common
 from Plugins.Extensions.IPTVPlayer.components.iptvplayerinit import TranslateTXT as _
 ###################################################
-
+from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import *
 ###################################################
 # FOREIGN import
 ###################################################
@@ -35,7 +35,6 @@
 try:    import json
 except: import simplejson as json
 
-from os import path as os_path, remove as os_remove, listdir as os_listdir
 ###################################################
 
 
@@ -88,6 +87,7 @@
         self["list"].setList([])
 
     def layoutFinished(self):
+        self.close()
         self.setTitle( self.updateObjImpl.getTitle() )
         self["sub_title"].setText( self.updateObjImpl.getSubTitle() )
         self["list"].setSelectionState(enabled = False)
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/keymap.xml ./IPTVPlayer/keymap.xml
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/keymap.xml	2015-11-11 07:16:27.439257999 +0100
+++ ./IPTVPlayer/keymap.xml	2015-12-14 16:01:53.906040999 +0100
@@ -25,4 +25,21 @@
                 <key id="KEY_RED"   mapto="videooptions" flags="m" />
                 <key id="KEY_MENU"  mapto="menu"         flags="m" />
         </map> 
+  <map context="j00zekHostTreeSelector">
+    <key id="KEY_OK"    mapto="selectHost" flags="m" />
+    <key id="KEY_EXIT" mapto="ExitHostSelector" flags="m" />
+    <key id="KEY_HOME" mapto="ExitHostSelector" flags="m" />
+    <key id="KEY_ESC"  mapto="ExitHostSelector" flags="m" />
+    <key id="KEY_RED"  mapto="ExitHostSelector" flags="m" />
+    <key id="KEY_GREEN" mapto="addHostToCategory" flags="m" />
+    <key id="KEY_YELLOW" mapto="deleteCategory" flags="m" />
+    <key id="KEY_BLUE" mapto="newCategory" flags="m" />
+    <key id="KEY_UP" mapto="lineUp" flags="mr" />
+    <key id="KEY_DOWN" mapto="lineDown" flags="mr" />
+    <key id="KEY_LEFT" mapto="pageUp" flags="m" />
+    <key id="KEY_RIGHT" mapto="pageDown" flags="m" />
+    <key id="KEY_PAGEUP" mapto="pageUp" flags="m" />
+    <key id="KEY_PAGEDOWN" mapto="pageDown" flags="m" />
+    <key id="KEY_MENU" mapto="showConfig" flags="m" />
+  </map>
 </keymap>
\ No newline at end of file
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/plugin.py ./IPTVPlayer/plugin.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/plugin.py	2015-11-17 06:34:21.247824000 +0100
+++ ./IPTVPlayer/plugin.py	2015-12-14 16:01:53.906040999 +0100
@@ -73,7 +73,9 @@
     #print config.plugins.iptvplayer.rtmpdumppath.value
     #print config.plugins.iptvplayer.f4mdumppath.value
     platform     = config.plugins.iptvplayer.plarform.value
-    if platform in ["auto", "unknown"] or not wgetpath or not rtmpdumppath or not f4mdumppath:
+    if platform in ["unknown"]:
+        doRunMain(session)
+    elif platform in ["auto"] or not wgetpath or not rtmpdumppath or not f4mdumppath:
         session.openWithCallback(boundFunction(doRunMain, session), IPTVSetupMainWidget)
     elif IPTVPlayerNeedInit():
         session.openWithCallback(boundFunction(doRunMain, session), IPTVSetupMainWidget, True)
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/setup/iptvsetupimpl.py ./IPTVPlayer/setup/iptvsetupimpl.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/setup/iptvsetupimpl.py	2015-12-13 07:38:57.671007000 +0100
+++ ./IPTVPlayer/setup/iptvsetupimpl.py	2015-12-15 07:39:55.425279007 +0100
@@ -7,7 +7,7 @@
 from Plugins.Extensions.IPTVPlayer.setup.iptvsetuphelper     import CBinaryStepHelper, CCmdValidator, SetupDownloaderCmdCreator
 from Plugins.Extensions.IPTVPlayer.components.iptvplayerinit import TranslateTXT as _
 ###################################################
-
+j00zekFork=True
 ###################################################
 # FOREIGN import
 ###################################################
@@ -33,56 +33,56 @@
         self.termination  = False
         
         self.tmpDir = GetTmpDir()
-        self.resourceServers = ["http://iptvplayer.pl/resources/", "http://iptvplayer.vline.pl/resources/"]
+        self.resourceServers = ["http://iptvplayer.pl/resources/", "http://iptvplayer.vline.pl/resources/", "http://hybrid.xunil.pl/IPTVPlayer_resources/"]
         
         self.ffmpegVersion = ""
         self.gstreamerVersion = ""
         self.openSSLVersion = ""
-        self.supportedPlatforms = ["sh4", "mipsel", "i686", "armv7"]
+        self.supportedPlatforms = ["sh4", "mipsel", "i686", "arm"]
         self.platform = "unknown"
         
         # wget members
         self.wgetVersion = 15 # 1.15 
         self.wgetpaths = ["wget", "/usr/bin/wget", "/usr/bin/fullwget", GetBinDir("wget", "")]
-        self._wgetInstallChoiseList = [(_('Install into the "%s".') % ("/usr/bin/fullwget " + _("recommended")), "/usr/bin/fullwget"),
-                                       (_('Install into the "%s".') % "IPTVPlayer/bin/wget", GetBinDir("wget", "")),
+        self._wgetInstallChoiseList = [(_('Install into the "%s".') % ("IPTVPlayer/bin/wget" + _("recommended")), GetBinDir("wget", "")),
+                                       (_('Install into the "%s".') % "/usr/bin/fullwget ", "/usr/bin/fullwget"),
                                        (_('Install into the "%s".') % "/usr/bin/wget", "/usr/bin/wget"),
                                        (_("Do not install (not recommended)"), "")]
         # rtmpdump members
-        self.rtmpdumpVersion = {'armv7':'K-S-V patch', 'default':"Compiled by samsamsam@o2.pl 2015-01-11"}
+        self.rtmpdumpVersion = {'arm':'K-S-V patch', 'default':"Compiled by samsamsam@o2.pl 2015-01-11"}
         self.rtmpdumppaths = ["/usr/bin/rtmpdump", "rtmpdump"]
         
         # f4mdump member
         self.f4mdumpVersion = "F4MDump v0.50"
         self.f4mdumppaths = ["/usr/bin/f4mdump", GetBinDir("f4mdump", "")]
-        self._f4mdumpInstallChoiseList = [(_('Install into the "%s".') % ("/usr/bin/f4mdump (%s)" % _("recommended")), "/usr/bin/f4mdump"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/f4mdump", GetBinDir("f4mdump", "")),
-                                          (_("Do not install (not recommended)"), "")]
-        self._f4mdumpInstallChoiseList2 = [(_('Install into the "%s".') % ("/usr/bin/f4mdump static libstdc++ (%s)" % _("recommended")), "/usr/bin/f4mdump"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/f4mdump _static_libstdc++", GetBinDir("f4mdump", "")),
+        self._f4mdumpInstallChoiseList = [(_('Install into the "%s".') % ("IPTVPlayer/bin/f4mdump (%s)" % _("recommended")), GetBinDir("f4mdump", "")),
+                                          (_('Install into the "%s".') % "/usr/bin/f4mdump", "/usr/bin/f4mdump"),
                                           (_("Do not install (not recommended)"), "")]
+        self._f4mdumpInstallChoiseList2 = [(_('Install into the "%s".') % ("IPTVPlayer/bin/f4mdump _static_libstdc++ (%s)" % _("recommended")), GetBinDir("f4mdump", "")),
+                                           (_('Install into the "%s".') % "/usr/bin/f4mdump static libstdc++", "/usr/bin/f4mdump"),
+                                           (_("Do not install (not recommended)"), "")]
                                           
         # uchardet member
-        self.uchardetVersion = "Version 0.0.2"
+        self.uchardetVersion = 2
         self.uchardetpaths = ["/usr/bin/uchardet", GetBinDir("uchardet", "")]
-        self._uchardetInstallChoiseList = [(_('Install into the "%s".') % ("/usr/bin/uchardet (%s)" % _("recommended")), "/usr/bin/uchardet"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/uchardet", GetBinDir("uchardet", "")),
-                                          (_("Do not install (not recommended)"), "")]
-        self._uchardetInstallChoiseList2 = [(_('Install into the "%s".') % ("/usr/bin/uchardet static libstdc++ (%s)" % _("recommended")), "/usr/bin/uchardet"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/uchardet _static_libstdc++", GetBinDir("uchardet", "")),
-                                          (_("Do not install (not recommended)"), "")]
+        self._uchardetInstallChoiseList = [(_('Install into the "%s".') % ("IPTVPlayer/bin/uchardet (%s)" % _("recommended")), GetBinDir("uchardet", "")),
+                                           (_('Install into the "%s".') % "/usr/bin/uchardet", "/usr/bin/uchardet"),
+                                           (_("Do not install (not recommended)"), "")]
+        self._uchardetInstallChoiseList2 = [(_('Install into the "%s".') % ("IPTVPlayer/bin/uchardet _static_libstdc++ (%s)" % _("recommended")), GetBinDir("uchardet", "")),
+                                            (_('Install into the "%s".') % "/usr/bin/uchardet static libstdc++", "/usr/bin/uchardet"),
+                                            (_("Do not install (not recommended)"), "")]
         # gstplayer
         self.gstplayerVersion = {'0.10':18, '1.0':10018}
         self.gstplayerpaths = ["/usr/bin/gstplayer", GetBinDir("gstplayer", "")]
-        self._gstplayerInstallChoiseList = [(_('Install into the "%s".') % ("/usr/bin/gstplayer (%s)" % _("recommended")), "/usr/bin/gstplayer"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/gstplayer", GetBinDir("gstplayer", "")),
-                                          (_("Do not install (not recommended)"), "")]
+        self._gstplayerInstallChoiseList = [(_('Install into the "%s".') % ("IPTVPlayer/bin/gstplayer (%s)" % _("recommended")), GetBinDir("gstplayer", "")),
+                                            (_('Install into the "%s".') % "/usr/bin/gstplayer", "/usr/bin/gstplayer"),
+                                            (_("Do not install (not recommended)"), "")]
         # exteplayer3
-        self.exteplayer3Version = {'sh4': 9, 'mipsel': 14, 'armv7': 11}
+        self.exteplayer3Version = {'sh4': 9, 'mipsel': 14}
         self.exteplayer3paths = ["/usr/bin/exteplayer3", GetBinDir("exteplayer3", "")]
-        self._exteplayer3InstallChoiseList = [(_('Install into the "%s".') % ("/usr/bin/exteplayer3 (%s)" % _("recommended")), "/usr/bin/exteplayer3"),
-                                          (_('Install into the "%s".') % "IPTVPlayer/bin/exteplayer3", GetBinDir("exteplayer3", "")),
-                                          (_("Do not install (not recommended)"), "")]
+        self._exteplayer3InstallChoiseList = [(_('Install into the "%s".') % ("IPTVPlayer/bin/exteplayer3 (%s)" % _("recommended")), GetBinDir("exteplayer3", "")),
+                                              (_('Install into the "%s".') % "/usr/bin/exteplayer3", "/usr/bin/exteplayer3"),
+                                              (_("Do not install (not recommended)"), "")]
                                           
         # flumpegdemux
         self.flumpegdemuxVersion = "0.10.85"
@@ -136,7 +136,18 @@
     ###################################################
     def platformDetect(self):
         printDBG("IPTVSetupImpl.platformDetect")
-        self.setInfo(_("Detection of the platform."), _("Plugin can be run on one of the following platforms: sh4, mipsel, i686, armv7."))
+        self.setInfo(_("Detection of the platform."), _("Plugin can be run on one of the following platforms: sh4, mipsel, i686, arm."))
+        if 'j00zekFork' in globals():
+            from Plugins.Extensions.IPTVPlayer.j00zekScripts.j00zekToolSet import getPlatform
+            platform = getPlatform()
+            if platform != 'unknown':
+                self.platform = platform
+                config.plugins.iptvplayer.plarform.value = self.platform
+                printDBG("IPTVSetupImpl.j00zekFork platform[%s]" % self.platform)
+                config.plugins.iptvplayer.plarform.save()
+                configfile.save()
+                self.setOpenSSLVersion()
+                return
         cmdTabs = []
         for platform in self.supportedPlatforms:
             platformtesterPath = resolveFilename(SCOPE_PLUGINS, "Extensions/IPTVPlayer/bin/%s/platformtester" % platform)
@@ -329,7 +340,9 @@
         def _detectValidator(code, data):
             if self.binaryInstalledSuccessfully: self.stepHelper.setInstallChoiseList( self._uchardetInstallChoiseList2 )
             else: self.stepHelper.setInstallChoiseList( self._uchardetInstallChoiseList )
-            if self.uchardetVersion in data: return True,False
+            try: ver = int(re.search("Version ([0-9]+?\.[0-9]+?\.[0-9]+?)", data).group(1).replace('.',''))
+            except: ver = 0
+            if ver >= self.uchardetVersion: return True,False
             else: return False,True
         def _deprecatedHandler(paths, stsTab, dataTab):
             sts, retPath = False, ""
diff -Naur -X ./exclude.pats /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/tools/iptvtools.py ./IPTVPlayer/tools/iptvtools.py
--- /home/j00zek/iptvplayer-GitLab-master-version/IPTVPlayer/tools/iptvtools.py	2015-11-28 22:44:46.696748559 +0100
+++ ./IPTVPlayer/tools/iptvtools.py	2015-12-14 16:01:53.910038998 +0100
@@ -47,7 +47,7 @@
     return nice
     
 def E2PrioFix(cmd):
-    if config.plugins.iptvplayer.plarform.value in ('mipsel', 'armv7'):
+    if config.plugins.iptvplayer.plarform.value in ('mipsel', 'armv7', 'arm'):
         return 'nice -n %d %s' % (GetNice()+2, cmd)
     else:
         return cmd
@@ -372,9 +372,9 @@
 #####################################################
 # get host list based on files in /hosts folder
 #####################################################
-def GetHostsList():
+def GetHostsList( subfolder = '' ):
     printDBG('getHostsList begin')
-    HOST_PATH = resolveFilename(SCOPE_PLUGINS, 'Extensions/IPTVPlayer/hosts/')
+    HOST_PATH = resolveFilename(SCOPE_PLUGINS, 'Extensions/IPTVPlayer/hosts/%s' % subfolder)
     lhosts = [] 
     
     try:
